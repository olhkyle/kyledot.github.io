{"version":3,"file":"component---src-pages-index-js-da69ca67e3e59d34f6b2.js","mappings":"8OAmBA,MAjBoBA,IACnB,MAAOC,EAAiBC,GAAsBC,EAAAA,SAAe,OAS7D,MAAO,CACNH,KARoBA,EAAKI,QAAO,QAAC,YAAEC,GAAa,SAAKA,EAAYC,WAAaL,CAAe,IAS7FA,kBACAM,sBAR6BD,GAAY,KACzCJ,EAAmBI,GACnBE,aAAaC,QAAQ,eAAgBH,EAAS,EAO9C,EC0DF,MAlEkB,IAAyB,IAAD,MAAvB,KAAEN,EAAI,SAAEU,GAAU,EACpC,MAAMC,GAAkC,QAAtB,EAAAX,EAAKY,KAAKC,oBAAY,aAAtB,EAAwBC,QAAK,QACzCC,EAAQf,EAAKgB,kBAAkBC,MAC/BC,EAAU,CAAI,OAAK,eAAKlB,EAAKgB,kBAAkBG,gBAE7CnB,KAAMoB,EAAY,gBAAEnB,EAAe,sBAAEM,GAA0Bc,EAAYN,GAEnF,OAAqB,IAAjBA,EAAMO,OAER,gBAAC,IAAM,CAACZ,SAAUA,EAAUI,MAAOH,GAClC,gBAAC,IAAG,MACJ,yBAAG,yBAML,gBAAC,IAAM,CAACD,SAAUA,EAAUI,MAAOH,GAClC,gBAAC,IAAG,MACJ,uBAAKY,UAAU,sCACd,sBAAIC,KAAK,UAAUC,GAAG,WAAWF,UAAU,yKACzCL,EAAWQ,KAAIpB,GACf,sBAAIqB,IAAKrB,EAAUkB,KAAK,MAAM,gBAAevB,IAAoBK,EAAyBiB,UAAS,aAAcjB,IAAaL,EAAkB,kGAAoG,mBAAqB2B,QAASrB,EAAsBD,IACtSA,OAKL,sBAAIuB,MAAO,CAAEC,UAAU,UACA,QAApB7B,EAA4Bc,EAAQK,GAAcM,KAAIK,IACvD,MAAMjB,EAAQiB,EAAK1B,YAAYS,OAASiB,EAAKC,OAAOC,KAEpD,OACC,sBAAIN,IAAKI,EAAKC,OAAOC,MACpB,2BAASV,UAAU,iBAAiBW,WAAS,EAACC,SAAS,6BACtD,8BACC,0BACC,gBAAC,EAAAC,KAAI,CAACC,GAAIN,EAAKC,OAAOC,KAAMK,SAAS,OACpC,wBAAMA,SAAS,WAAWf,UAAU,yGAClCT,KAIJ,6BAAQiB,EAAK1B,YAAYkC,OAE1B,+BACC,uBAAKhB,UAAU,cACd,4BAAM,MACN,qBACCiB,wBAAyB,CACxBC,OAAQV,EAAK1B,YAAYqC,aAAeX,EAAKY,SAE9CL,SAAS,cACTf,UAAU,mBAKV,KAIA,EAWJ,MAAMqB,EAAO,IAAM,gBAAC,IAAG,CAAC9B,MAAM,Y","sources":["webpack://kyledot/./src/hooks/useCategory.js","webpack://kyledot/./src/pages/index.js"],"sourcesContent":["import React from 'react';\n\nconst useCategory = data => {\n\tconst [currentCategory, setCurrentCategory] = React.useState('All');\n\n\tconst filteredData = data.filter(({ frontmatter }) => frontmatter.category === currentCategory);\n\n\tconst updateCurrentCategory = category => () => {\n\t\tsetCurrentCategory(category);\n\t\tlocalStorage.setItem('blogCategory', category);\n\t};\n\n\treturn {\n\t\tdata: filteredData,\n\t\tcurrentCategory,\n\t\tupdateCurrentCategory,\n\t};\n};\n\nexport default useCategory;\n","import * as React from 'react';\nimport { Link, graphql } from 'gatsby';\n\nimport Bio from '../components/bio';\nimport Layout from '../components/layout';\nimport Seo from '../components/seo';\nimport useCategory from '../hooks/useCategory';\n\nconst BlogIndex = ({ data, location }) => {\n\tconst siteTitle = data.site.siteMetadata?.title || `Title`;\n\tconst posts = data.allMarkdownRemark.nodes;\n\tconst categories = ['All', ...data.allMarkdownRemark.categoryList];\n\n\tconst { data: currentPosts, currentCategory, updateCurrentCategory } = useCategory(posts);\n\n\tif (posts.length === 0) {\n\t\treturn (\n\t\t\t<Layout location={location} title={siteTitle}>\n\t\t\t\t<Bio />\n\t\t\t\t<p>No blog posts found.</p>\n\t\t\t</Layout>\n\t\t);\n\t}\n\n\treturn (\n\t\t<Layout location={location} title={siteTitle}>\n\t\t\t<Bio />\n\t\t\t<nav className=\"sticky top-1 left-0 mb-[3rem] z-10\">\n\t\t\t\t<ul role=\"tablist\" id=\"category\" className=\"hide-scrollbar flex gap-2 items-center m-0 p-2 w-full border-[1px] rounded-md border-gray-300 border-l-4 border-r-4 backdrop-blur overflow-x-scroll xs:bg-gray-100/40\">\n\t\t\t\t\t{categories.map(category => (\n\t\t\t\t\t\t<li key={category} role=\"tab\" aria-selected={currentCategory === category ? true : false} className={`category ${category === currentCategory ? 'border-blue-primary text-blue-primary font-bold dark:border-blue-primary dark:text-blue-primary' : 'border-gray-100'}`} onClick={updateCurrentCategory(category)}>\n\t\t\t\t\t\t\t{category}\n\t\t\t\t\t\t</li>\n\t\t\t\t\t))}\n\t\t\t\t</ul>\n\t\t\t</nav>\n\t\t\t<ol style={{ listStyle: `none` }}>\n\t\t\t\t{(currentCategory === 'All' ? posts : currentPosts).map(post => {\n\t\t\t\t\tconst title = post.frontmatter.title || post.fields.slug;\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<li key={post.fields.slug}>\n\t\t\t\t\t\t\t<article className=\"post-list-item\" itemScope itemType=\"http://schema.org/Article\">\n\t\t\t\t\t\t\t\t<header>\n\t\t\t\t\t\t\t\t\t<h2>\n\t\t\t\t\t\t\t\t\t\t<Link to={post.fields.slug} itemProp=\"url\">\n\t\t\t\t\t\t\t\t\t\t\t<span itemProp=\"headline\" className=\"text-dark-primary dark:text-white font-extrabold hover:text-blue-primary dark:hover:text-blue-primary\">\n\t\t\t\t\t\t\t\t\t\t\t\t{title}\n\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t\t\t\t<small>{post.frontmatter.date}</small>\n\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t\t\t<section>\n\t\t\t\t\t\t\t\t\t<div className=\"flex gap-2\">\n\t\t\t\t\t\t\t\t\t\t<span>☕️</span>\n\t\t\t\t\t\t\t\t\t\t<p\n\t\t\t\t\t\t\t\t\t\t\tdangerouslySetInnerHTML={{\n\t\t\t\t\t\t\t\t\t\t\t\t__html: post.frontmatter.description || post.excerpt,\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\titemProp=\"description\"\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"text-[15px]\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</section>\n\t\t\t\t\t\t\t</article>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</ol>\n\t\t</Layout>\n\t);\n};\n\nexport default BlogIndex;\n\n/**\n * Head export to define metadata for the page\n *\n * See: https://www.gatsbyjs.com/docs/reference/built-in-components/gatsby-head/\n */\nexport const Head = () => <Seo title=\"Kyle.dot\" />;\n\nexport const pageQuery = graphql`\n\t{\n\t\tsite {\n\t\t\tsiteMetadata {\n\t\t\t\ttitle\n\t\t\t\tdescription\n\t\t\t}\n\t\t}\n\t\tallMarkdownRemark(sort: { frontmatter: { date: DESC } }) {\n\t\t\tcategoryList: distinct(field: { frontmatter: { category: SELECT } })\n\t\t\tnodes {\n\t\t\t\texcerpt\n\t\t\t\tfields {\n\t\t\t\t\tslug\n\t\t\t\t}\n\t\t\t\tfrontmatter {\n\t\t\t\t\tdate(formatString: \"MMMM DD, YYYY\")\n\t\t\t\t\ttitle\n\t\t\t\t\tdescription\n\t\t\t\t\tcategory\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`;\n"],"names":["data","currentCategory","setCurrentCategory","React","filter","frontmatter","category","updateCurrentCategory","localStorage","setItem","location","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","nodes","categories","categoryList","currentPosts","useCategory","length","className","role","id","map","key","onClick","style","listStyle","post","fields","slug","itemScope","itemType","Link","to","itemProp","date","dangerouslySetInnerHTML","__html","description","excerpt","Head"],"sourceRoot":""}