{"componentChunkName":"component---src-templates-blog-post-js","path":"/Initial-Setup-Routine/","result":{"data":{"site":{"siteMetadata":{"title":"Kyle.dot"}},"markdownRemark":{"id":"a16cdc9f-daf0-5ead-bae3-6ec50e21d986","excerpt":"주기적인 Mac 포맷으로 이후에 초기 세팅을 재확인할 때 잊게 되는 항목들이 있어 이렇게 작성하게 되었습니다. 혼자 보는 것을 공유하게 되면, 다른 분들에게도 훌륭한 앱이나 설정들을 사용할 수 있게 할 수 있다고 생각합니다. 주로 작업에 필요한 Tool 설치와 Mac…","html":"<blockquote>\n<p><strong>주기적인 Mac 포맷</strong>으로 이후에 초기 세팅을 재확인할 때 <strong>잊게 되는 항목들</strong>이 있어 이렇게 작성하게 되었습니다. 혼자 보는 것을 <strong>공유</strong>하게 되면, 다른 분들에게도 훌륭한 앱이나 설정들을 사용할 수 있게 할 수 있다고 생각합니다. 주로 작업에 필요한 <strong>Tool</strong> 설치와 <strong>Mac</strong> 세팅에 대한 내용이 담겨 있습니다.</p>\n</blockquote>\n<blockquote>\n<p>현재 <strong>Laptop</strong> 은 <strong>M1 pro</strong>를 사용하고 있습니다. 현재 <strong>MAC OS</strong>는 <strong>Ventura</strong>를 사용하고 있습니다.</p>\n</blockquote>\n<br/>\n<h2>1. MAC 키보드 설정</h2>\n<p>⌨️ 키보드 ➡️ 키 반복 '<strong>빠르게</strong>' 로 변경</p>\n<p>🚣🏻‍♀️ 트랙패드 ➡️ <strong>Scroll &#x26; Zoom</strong> 항목에서 <strong>Natural Scrolling</strong> (자연스럽게) <strong>체크 해제</strong></p>\n<br/>\n<h2>2. 효율성 애플리케이션 설치</h2>\n<ul>\n<li><strong>Magnet</strong> [ AppStore ]</li>\n<li><strong>Bandizip</strong> [ AppStore ]</li>\n<li>Coconutbattery : <a href=\"https://www.coconut-flavour.com/coconutbattery/\">https://www.coconut-flavour.com/coconutbattery/</a></li>\n<li><strong>Appcleaner</strong> : <a href=\"https://freemacsoft.net/appcleaner/\">https://freemacsoft.net/appcleaner/</a></li>\n<li>Aldente : <a href=\"https://apphousekitchen.com/\">https://apphousekitchen.com/</a></li>\n<li><strong>Raycast</strong> : <a href=\"https://www.raycast.com/\">https://www.raycast.com/</a></li>\n<li><strong>Colorslurp</strong> [ AppStore ]</li>\n<li>Gifski [AppStore] === gif generator</li>\n<li>Onedrive</li>\n<li><strong>Slack</strong></li>\n<li>DeepL</li>\n</ul>\n<br/>\n<h2>3. Chrome 브라우저 설치</h2>\n<ul>\n<li>다운로드</li>\n<li>크롬 로그인</li>\n<li>크롬 동기화</li>\n<li>크롬 기본 앱으로 설정: 시스템 환경설정 ➡️ 일반 ➡️ 기본 웹 브라우저 ➡️ 크롬 선택</li>\n</ul>\n<br/>\n<h2>4. Iterm2 &#x26; Homebrew &#x26; Oh My Zsh &#x26; Git 설치</h2>\n<ul>\n<li>\n<p><strong>Iterm2</strong> 설치 : <a href=\"https://iterm2.com/\">https://iterm2.com/</a></p>\n</li>\n<li>\n<p><strong>Homebrew</strong> 설치 : <a href=\"https://brew.sh/index_ko\">https://brew.sh/index_ko</a></p>\n<ul>\n<li><code class=\"language-text\">/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"</code></li>\n</ul>\n</li>\n<li>\n<p><strong>Zsh &#x26; Oh My Zsh</strong> 설치 : <a href=\"https://ohmyz.sh/#install\">https://ohmyz.sh/#install</a></p>\n<ul>\n<li><strong>Zsh</strong> 설치\n<ul>\n<li><code class=\"language-text\">brew install zsh</code></li>\n<li>간혹 m1 맥에서 homebrew 설치 후 brew를 command에서 못찾는 경우 다음과 같이 해결합니다. ➡️ Error 발생 형태 <code class=\"language-text\">zsh: command not found: brew</code>\n<ul>\n<li><strong>iterm2</strong> 또는 <strong>terminal</strong> 앱을 열고 <code class=\"language-text\">vi ~/.zshrc</code> 명령어 입력 후 vi 에디터로 이동합니다.</li>\n<li>입력 가능하게 하기 위해서 <code class=\"language-text\">i</code>를 키보드에서 입력하고, <code class=\"language-text\">export PATH=/opt/homebrew/bin:$PATH</code> 명령어를 추가합니다.</li>\n<li>저장하고 종료하기 위해 <code class=\"language-text\">Esc</code> 키 입력 후, <code class=\"language-text\">:wq!</code> 를 입력하고 <code class=\"language-text\">Enter</code> 입력 후 종료합니다.</li>\n<li>저장한 상태를 실행, 그리고 홈 디렉토리의 <code class=\"language-text\">.zshrc</code> 로 설정해 zsh shell이 brew command를 찾아 실행하도록 하기 위하여 <code class=\"language-text\">source ~/.zshrc</code> 를 입력하고 <code class=\"language-text\">Enter</code>를 입력하면 이제 brew를 command에서 찾게 됩니다!</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><strong>oh-my-zsh</strong> 설치\n<ul>\n<li><code class=\"language-text\">sh -c \"$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)\"</code></li>\n<li>spaceship 테마 설치\n<ul>\n<li>링크 ➡️ <a href=\"https://github.com/spaceship-prompt/spaceship-prompt\">https://github.com/spaceship-prompt/spaceship-prompt</a></li>\n<li>Clone repo ➡️ <code class=\"language-text\">git clone https://github.com/spaceship-prompt/spaceship-prompt.git \"$ZSH_CUSTOM/themes/spaceship-prompt\" --depth=1</code></li>\n<li>Symlink spaceship.zsh-theme to your oh-my-zsh custom themes directory ➡️ <code class=\"language-text\">ln -s \"$ZSH_CUSTOM/themes/spaceship-prompt/spaceship.zsh-theme\" \"$ZSH_CUSTOM/themes/spaceship.zsh-theme\"</code></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>Git</strong> 설치</p>\n<ul>\n<li>\n<p>git 설정값 확인 : <code class=\"language-text\">git config --list</code></p>\n</li>\n<li>\n<p>git 기존 브랜치 <code class=\"language-text\">main</code> branch로 설정 : <code class=\"language-text\">git config --global init.defaultbranch main</code></p>\n</li>\n<li>\n<p>git <strong>이메일</strong> 설정 : <code class=\"language-text\">git config --global user.email &lt;이메일></code></p>\n</li>\n<li>\n<p>git <strong>사용자명</strong> 설정 : <code class=\"language-text\">git config --global user.name &lt;사용자 이름></code></p>\n</li>\n<li>\n<p>현재 이메일, 사용자명 확인 : <code class=\"language-text\">git config user.email</code>, <code class=\"language-text\">git config user.name</code></p>\n</li>\n<li>\n<p>터미널 또는 iterm에서 명령어로 <strong>vscode</strong> 여는 설정</p>\n<ul>\n<li><code class=\"language-text\">vi ~/.zshrc</code></li>\n<li>위의 brew command 명령어를 못찾는 문제에서 설명할 때처럼 <code class=\"language-text\">i</code>를 키보드에서 입력하고, 입력 상태에서 제일 하단에 <code class=\"language-text\">code () { VSCODE_CWD=\"$PWD\" open -n -b \"com.microsoft.VSCode\" --args $* ;}</code>를 삽입하고 저장합니다.</li>\n<li>저장한 상태를 실행하기 위해 <code class=\"language-text\">source ~/.zshrc </code> 실행</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<br/>\n<h2>5. VSCode 및 플러그인 설치</h2>\n<h3>플러그인 종류</h3>\n<ul>\n<li><strong>Auto Rename Tag</strong> ☕️</li>\n<li>Code Spell Checker</li>\n<li>CodeSnap</li>\n<li><strong>CSS Peek</strong> ☕️</li>\n<li><strong>ESLint</strong> ☕️☕️☕️</li>\n<li>Git Graph</li>\n<li>Gitmoji</li>\n<li><strong>HTML CSS Support</strong> ☕️</li>\n<li>Korean Language Pack for VS Code</li>\n<li><strong>Live Server</strong> ☕️☕️☕️</li>\n<li><strong>Code Runner</strong> ☕️☕️</li>\n<li>Markdown All in One</li>\n<li>Material Icon Theme</li>\n<li><strong>Night Owl (Theme)</strong> ☕️☕️☕️</li>\n<li>Path Intellisense</li>\n<li><strong>Prettier - Code Formatter</strong> ☕️☕️☕️</li>\n<li><strong>REST Client</strong> ☕️</li>\n<li>Sass(.sass only)</li>\n<li>Tailwind CSS IntelliSense</li>\n<li>vscode-styled-components</li>\n</ul>\n<blockquote>\n<p><strong>강조된</strong> 부분은 필수로 설치</p>\n</blockquote>\n<br/>\n<h2>6. 사용할 Font 추가</h2>\n<ul>\n<li><strong>Dank Mono</strong> : <a href=\"https://philpl.gumroad.com/l/dank-mono\">https://philpl.gumroad.com/l/dank-mono</a> ☕️☕️☕️</li>\n<li><strong>D2Coding</strong> : <a href=\"https://github.com/naver/d2codingfont\">https://github.com/naver/d2codingfont</a> ☕️☕️</li>\n<li><strong>Noto Sans KR</strong> ☕️☕️</li>\n<li>DM Mono</li>\n<li>IBM Plex Mono</li>\n<li>Inter</li>\n<li><strong>JetBrains Mono</strong> : <a href=\"https://www.jetbrains.com/lp/mono/\">https://www.jetbrains.com/lp/mono/</a> ☕️</li>\n<li>Nunito Sans</li>\n<li>Open Arrow : <a href=\"https://yeun.github.io/open-arrow/\">https://yeun.github.io/open-arrow/</a></li>\n<li><strong>Poppins</strong></li>\n<li><strong>Pretendard</strong> : <a href=\"https://github.com/orioncactus/pretendard/releases/tag/v1.3.6\">https://github.com/orioncactus/pretendard/releases/tag/v1.3.6</a> ☕️☕️</li>\n<li>Schibsted Grotesk</li>\n<li>Space Grotesk</li>\n<li><strong>Spoqa Han Sans Neo</strong> ☕️☕️</li>\n</ul>\n<blockquote>\n<p>나머지는 <strong>Google Fonts</strong>에서 Family 파일로 Local 설치</p>\n</blockquote>\n<br/>\n<h2>7. Design &#x26; Writing Tools 설치</h2>\n<ul>\n<li><strong>Figma</strong> ☕️☕️☕️</li>\n<li><strong>Photoshop</strong> ☕️☕️</li>\n<li>Sketchup</li>\n<li>Pages / Numbers / Keynote</li>\n<li>MS Office</li>\n<li><strong>Notion</strong> ☕️☕️☕️</li>\n<li><strong>Obsidion</strong> ☕️☕️</li>\n</ul>\n<br/>","frontmatter":{"title":"My Initial Setup Routine With MAC After Reset","date":"August 19, 2023","description":"M1 맥 초기화 이후 초기 세팅 정리","category":"Etc"}},"previous":{"fields":{"slug":"/without-bundler/"},"frontmatter":{"title":"SetUp Without CRA or Bundle Tools"}},"next":{"fields":{"slug":"/browser-render-process/"},"frontmatter":{"title":"Web Browser Rendering Process with Performance Optimization"}}},"pageContext":{"id":"a16cdc9f-daf0-5ead-bae3-6ec50e21d986","previousPostId":"07ade710-51cd-5a4f-a914-7ddcc316bb3b","nextPostId":"c6444902-24ab-5d3e-a9db-33c6dfd2d6f2"}},"staticQueryHashes":["707948987","805692932"],"slicesMap":{}}